{"title":"connected-react-router","uid":"3a1de7864b72f88f991d2ad903723f46","slug":"connected-react-router","date":"2021-04-06T14:27:28.294Z","updated":"2021-04-06T14:51:00.207Z","comments":true,"path":"api/articles/connected-react-router.json","keywords":null,"cover":"http://img-blog.csdnimg.cn/20200815152729473.png","content":"<h2 id=\"index-js\"><a href=\"#index-js\" class=\"headerlink\" title=\"index.js\"></a>index.js</h2><span id=\"more\"></span>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">import routerMiddlware from &#39;.&#x2F;routerMiddlware&#39;;\nimport connectRouter from &#39;.&#x2F;connectRouter&#39;;\nimport push from &#39;.&#x2F;push&#39;;\nimport ConnectedRouter from &#39;.&#x2F;ConnectedRouter&#39;;\nexport &#123; routerMiddlware, connectRouter, push, ConnectedRouter &#125;;</code></pre>\n\n<!-- more -->\n\n<h2 id=\"constants\"><a href=\"#constants\" class=\"headerlink\" title=\"constants\"></a>constants</h2><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">export const CALL_HISTORY_METHOD &#x3D; &#39;@@router&#x2F;CALL_HISTORY_METHOD&#39;;\nexport const LOCATION_CHANGE &#x3D; &#39;@@router&#x2F;LOCATION_CHANGE&#39;;</code></pre>\n\n<h2 id=\"ConnectedRouter-js\"><a href=\"#ConnectedRouter-js\" class=\"headerlink\" title=\"ConnectedRouter.js\"></a>ConnectedRouter.js</h2><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">import React, &#123; Component &#125; from &#39;react&#39;;\nimport &#123; ReactReduxContext &#125; from &#39;react-redux&#39;;\nimport &#123; Route &#125; from &#39;react-router&#39;;\nimport &#123; LOCATION_CHANGE &#125; from &#39;.&#x2F;constants&#39;;\nclass ConnectedRouter extends Component &#123;\n  static contextType &#x3D; ReactReduxContext;\n  constructor(props) &#123;\n    super(props);\n    this.state &#x3D; &#123;&#125;;\n  &#125;\n  componentDidMount() &#123;\n    &#x2F;&#x2F; location 新的路径\n    &#x2F;&#x2F; action 新的动作 POP PUSH\n    this.unlistener &#x3D; this.props.history.listen((location, action) &#x3D;&gt; &#123;\n      this.context.store.dispatch(&#123;\n        type: LOCATION_CHANGE,\n        payload: &#123; location, action &#125;,\n      &#125;);\n    &#125;);\n  &#125;\n  componentWillUnmount() &#123;\n    this.unlistener();\n  &#125;\n  render() &#123;\n    let &#123; history, children &#125; &#x3D; this.props;\n    return &lt;Route history&#x3D;&#123;history&#125;&gt;&#123;children&#125;&lt;&#x2F;Route&gt;;\n  &#125;\n&#125;\n\nexport default ConnectedRouter;</code></pre>\n\n<h2 id=\"connectRouter-js\"><a href=\"#connectRouter-js\" class=\"headerlink\" title=\"connectRouter.js\"></a>connectRouter.js</h2><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">import &#123; LOCATION_CHANGE &#125; from &#39;.&#x2F;constants&#39;;\n&#x2F;&#x2F; eslint-disable-next-line import&#x2F;no-anonymous-default-export\nexport default function (history) &#123;\n  let initialState &#x3D; &#123; action: history.action, location: history.location &#125;;\n  return function (state &#x3D; initialState, action) &#123;\n    switch (action.type) &#123;\n      case LOCATION_CHANGE:\n        return action.payload;\n      default:\n        return state;\n    &#125;\n  &#125;;\n&#125;</code></pre>\n\n<h2 id=\"push\"><a href=\"#push\" class=\"headerlink\" title=\"push\"></a>push</h2><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">import &#123; CALL_HISTORY_METHOD &#125; from &#39;.&#x2F;constants&#39;;\nfunction push(path) &#123;\n  return &#123;\n    type: CALL_HISTORY_METHOD,\n    payload: &#123;\n      method: &#39;push&#39;,\n      path,\n    &#125;,\n  &#125;;\n&#125;\n\nexport default push;</code></pre>\n\n<h2 id=\"routerMiddleware-js\"><a href=\"#routerMiddleware-js\" class=\"headerlink\" title=\"routerMiddleware.js\"></a>routerMiddleware.js</h2><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">import &#123; CALL_HISTORY_METHOD &#125; from &#39;.&#x2F;constants&#39;;\n&#x2F;&#x2F; eslint-disable-next-line import&#x2F;no-anonymous-default-export\nexport default function (history) &#123;\n  return (&#123; dispatch, getState &#125;) &#x3D;&gt; (next) &#x3D;&gt; (action) &#x3D;&gt; &#123;\n    if (action.type &#x3D;&#x3D;&#x3D; CALL_HISTORY_METHOD) &#123;\n      let &#123; method, path &#125; &#x3D; action.payload;\n      history[method](path);\n    &#125; else &#123;\n      next();\n    &#125;\n  &#125;;\n&#125;</code></pre>\n","feature":null,"text":"index.js import routerMiddlware from &#39;.&#x2F;routerMiddlware&#39;; import connectRouter from &#39;.&#x2F;connectRouter&#39;; import push...","link":"","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[{"name":"React","slug":"React","count":7,"path":"api/categories/React.json"}],"tags":[{"name":"React","slug":"React","count":7,"path":"api/tags/React.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#index-js\"><span class=\"toc-text\">index.js</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#constants\"><span class=\"toc-text\">constants</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#ConnectedRouter-js\"><span class=\"toc-text\">ConnectedRouter.js</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#connectRouter-js\"><span class=\"toc-text\">connectRouter.js</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#push\"><span class=\"toc-text\">push</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#routerMiddleware-js\"><span class=\"toc-text\">routerMiddleware.js</span></a></li></ol>","author":{"name":"麦当","avatar":"https://cdn.jsdelivr.net/gh/Maidang1/image//image/avatar.jpg","link":""},"mapped":true,"prev_post":{"title":"proxy 基础学习","uid":"764ea20144bdcb36de34ee7af78c0567","slug":"proxy","date":"2021-04-06T14:27:28.313Z","updated":"2021-04-06T14:51:47.305Z","comments":true,"path":"api/articles/proxy.json","keywords":null,"cover":"http://img-blog.csdnimg.cn/20200807160832237.jpg","text":"代理基础什么是代理 代理是目标对象的抽象，类似于 c++的指针，可以用作目标的替身，又独立目标之外。 const target &#x3D; &#123; id: &#39;target&#39;, &#125;; const handler &#x3D; &#123;&#125...","link":"","photos":[],"count_time":{"symbolsCount":"8.5k","symbolsTime":"8 mins."},"categories":[{"name":"JavaScript","slug":"JavaScript","count":4,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":3,"path":"api/tags/JavaScript.json"}],"author":{"name":"麦当","avatar":"https://cdn.jsdelivr.net/gh/Maidang1/image//image/avatar.jpg","link":""}},"next_post":{}}