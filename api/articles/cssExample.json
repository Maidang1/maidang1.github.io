{"title":"css 好看的案例","uid":"d7f18c2655e3f93631b257b366acd0c3","slug":"cssExample","date":"2021-04-11T10:15:28.048Z","updated":"2021-05-03T14:39:03.577Z","comments":true,"path":"api/articles/cssExample.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/Maidang1/image//image/beach-2089936_1920.jpg","content":"<h2 id=\"渐变\"><a href=\"#渐变\" class=\"headerlink\" title=\"渐变\"></a>渐变</h2><p><img src=\"https://cdn.jsdelivr.net/gh/Maidang1/image//image/001.png\" alt=\"001\"></p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\">&lt;body&gt;\n  &lt;div class&#x3D;&quot;box&quot;&gt;&lt;h2&gt;Gradient&lt;&#x2F;h2&gt;&lt;&#x2F;div&gt;\n  &lt;div class&#x3D;&quot;box&quot;&gt;&lt;h2&gt;box&lt;&#x2F;h2&gt;&lt;&#x2F;div&gt;\n  &lt;div class&#x3D;&quot;box&quot;&gt;&lt;h2&gt;Shadow&lt;&#x2F;h2&gt;&lt;&#x2F;div&gt;\n&lt;&#x2F;body&gt;</code></pre>\n\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\">body &#123;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n  min-height: 100vh;\n&#125;\n.box &#123;\n  position: relative;\n  width: 300px;\n  height: 200px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0 30px;\n&#125;\n.box::before &#123;\n  content: &#39;&#39;;\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  filter: blur(25px);\n  transform: translateY(30px) scale(0.9);\n&#125;\n.box:nth-child(1),\n.box:nth-child(1)::before &#123;\n  background: linear-gradient(135deg, #f403d1, #64b5f6);\n&#125;\n.box:nth-child(2),\n.box:nth-child(2)::before &#123;\n  background: linear-gradient(135deg, #ffec61, #f321d7);\n&#125;\n.box:nth-child(3),\n.box:nth-child(3)::before &#123;\n  background: linear-gradient(135deg, #24ff72, #2196f3);\n&#125;\n.box h2 &#123;\n  position: relative;\n  z-index: 1;\n  color: #fff;\n  font-size: 3em;\n&#125;</code></pre>\n\n<h2 id=\"伪类\"><a href=\"#伪类\" class=\"headerlink\" title=\"伪类\"></a>伪类</h2><p><img src=\"http://image.vulpix.top/ghost.png\"></p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\">&lt;div class&#x3D;&quot;container&quot;&gt;\n      &lt;div class&#x3D;&quot;ghost&quot;&gt;\n        &lt;div class&#x3D;&quot;ghostEyes&quot;&gt;&lt;&#x2F;div&gt;\n        &lt;div class&#x3D;&quot;ghostDimples&quot;&gt;&lt;&#x2F;div&gt;\n        &lt;div class&#x3D;&quot;ghostFeet&quot;&gt;\n          &lt;div class&#x3D;&quot;ghostFoot&quot;&gt;&lt;&#x2F;div&gt;\n          &lt;div class&#x3D;&quot;ghostFoot&quot;&gt;&lt;&#x2F;div&gt;\n          &lt;div class&#x3D;&quot;ghostFoot&quot;&gt;&lt;&#x2F;div&gt;\n          &lt;div class&#x3D;&quot;ghostFoot&quot;&gt;&lt;&#x2F;div&gt;\n        &lt;&#x2F;div&gt;\n      &lt;&#x2F;div&gt;\n      &lt;div class&#x3D;&quot;shadow&quot;&gt;&lt;&#x2F;div&gt;\n    &lt;&#x2F;div&gt;</code></pre>\n\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\">* &#123;\n       &#x2F;* 页面初始化 清除元素的内外边距 *&#x2F;\n       padding: 0;\n       margin: 0;\n     &#125;\n     body &#123;\n       &#x2F;* 弹性布局 让元素在页面中垂直+水平居中 *&#x2F;\n       display: flex;\n       justify-content: center;\n       align-items: center;\n       &#x2F;* 让页面占浏览器可视区域的高度 *&#x2F;\n       height: 100vh;\n       background-color: #00034b;\n     &#125;\n     .container .ghost &#123;\n       &#x2F;* 相对定位 *&#x2F;\n       position: relative;\n       width: 150px;\n       height: 225px;\n       &#x2F;* 圆角属性 左上角和右上角为圆角 *&#x2F;\n       border-radius: 75px 75px 0 0;\n       background-color: #fff;\n       &#x2F;* 盒子阴影 inset是内阴影 啥都不加就是默认的外阴影(outset) *&#x2F;\n       box-shadow: -17px 0 0 #dbdbdb inset, 0 0 50px #5939db;\n       animation: ghost 2s infinite;\n     &#125;\n     &#x2F;* 眼睛 start *&#x2F;\n     .container .ghost .ghostEyes &#123;\n       &#x2F;* 弹性布局 *&#x2F;\n       display: flex;\n       &#x2F;* 让元素平均分配宽度 *&#x2F;\n       justify-content: space-around;\n       width: 90px;\n       padding-top: 70px;\n       margin: 0 auto;\n     &#125;\n     &#x2F;* 利用两个伪元素做出卡姿兰大眼睛 *&#x2F;\n     .container .ghost .ghostEyes::before,\n     .container .ghost .ghostEyes::after &#123;\n       content: &quot;&quot;;\n       width: 15px;\n       height: 25px;\n       border-radius: 50%;\n       background-color: #00034b;\n     &#125;\n     &#x2F;* 眼睛 end *&#x2F;\n\n     &#x2F;* 腮红 start  *&#x2F;\n     &#x2F;* 逻辑跟眼睛一样 *&#x2F;\n     .container .ghost .ghostDimples &#123;\n       display: flex;\n       justify-content: space-around;\n       width: 130px;\n       padding-top: 15px;\n       margin: 0 auto;\n     &#125;\n     .container .ghost .ghostDimples::before,\n     .container .ghost .ghostDimples::after &#123;\n       content: &quot;&quot;;\n       width: 15px;\n       height: 15px;\n       border-radius: 50%;\n       background-color: #ffbeff;\n     &#125;\n     &#x2F;* 腮红 end *&#x2F;\n\n     &#x2F;* 脚 start  *&#x2F;\n     .container .ghost .ghostFeet &#123;\n       &#x2F;* 这个主要是向让四只脚水平排列  *&#x2F;\n       display: flex;\n       &#x2F;* 绝对定位 *&#x2F;\n       position: absolute;\n       bottom: -13px;\n       width: 100%;\n     &#125;\n     .container .ghost .ghostFeet .ghostFoot &#123;\n       width: 25%;\n       height: 26px;\n       border-radius: 50%;\n       background-color: #fff;\n     &#125;\n     &#x2F;* 设置一下最后一个 让它跟身体的内阴影一样 *&#x2F;\n     .container .ghost .ghostFeet .ghostFoot:last-child &#123;\n       &#x2F;* 利用背景渐变色实现 to right 是从做到右 *&#x2F;\n       background-image: linear-gradient(to right, #fff 55%, #dbdbdb 45%);\n     &#125;\n     &#x2F;* 脚 end *&#x2F;\n\n     &#x2F;* 阴影 start *&#x2F;\n     .container .shadow &#123;\n       width: 150px;\n       height: 40px;\n       margin-top: 50px;\n       border-radius: 50%;\n       background-color: #000232;\n       &#x2F;* 动画  名称 时长 infinite是无限次播放 *&#x2F;\n       animation: shadow 2s infinite;\n     &#125;\n     &#x2F;* 阴影 end *&#x2F;\n     &#x2F;* 然后制作漂浮的动画 *&#x2F;\n     @keyframes ghost &#123;\n       0%,\n       100% &#123;\n         transform: translateY(0);\n       &#125;\n       50% &#123;\n         &#x2F;* 2D位移 -15px 是向上走 *&#x2F;\n         transform: translateY(-15px);\n       &#125;\n     &#125;\n     @keyframes shadow &#123;\n       0%,\n       100% &#123;\n         transform: scale(1);\n       &#125;\n       50% &#123;\n         &#x2F;* 缩放 .9比1小一点点 *&#x2F;\n         transform: scale(0.9);\n       &#125;\n     &#125;</code></pre>\n\n\n\n<h2 id=\"阴影\"><a href=\"#阴影\" class=\"headerlink\" title=\"阴影\"></a>阴影</h2><pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\">background-image: linear-gradient(\n         to bottom,\n         rgba(0, 0, 0, 0) 0%,\n         rgba(0, 0, 0, 0.009) 11.7%,\n         rgba(0, 0, 0, 0.034) 22.1%,\n         rgba(0, 0, 0, 0.072) 31.2%,\n         rgba(0, 0, 0, 0.123) 39.4%,\n         rgba(0, 0, 0, 0.182) 46.6%,\n         rgba(0, 0, 0, 0.249) 53.1%,\n         rgba(0, 0, 0, 0.32) 58.9%,\n         rgba(0, 0, 0, 0.394) 64.3%,\n         rgba(0, 0, 0, 0.468) 69.3%,\n         rgba(0, 0, 0, 0.54) 74.1%,\n         rgba(0, 0, 0, 0.607) 78.8%,\n         rgba(0, 0, 0, 0.668) 83.6%,\n         rgba(0, 0, 0, 0.721) 88.7%,\n         rgba(0, 0, 0, 0.762) 94.1%,\n         rgba(0, 0, 0, 0.79) 100%\n       );\n       transform: translateY(-50%);</code></pre>\n\n","feature":null,"text":"渐变 &lt;body&gt; &lt;div class&#x3D;&quot;box&quot;&gt;&lt;h2&gt;Gradient&lt;&#x2F;h2&gt;&lt;&#x2F;div&gt; &lt;div class&#x3D;&quot;box&quot;...","link":"","photos":[],"count_time":{"symbolsCount":"5.9k","symbolsTime":"5 mins."},"categories":[{"name":"css","slug":"css","count":1,"path":"api/categories/css.json"}],"tags":[{"name":"css","slug":"css","count":1,"path":"api/tags/css.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%B8%90%E5%8F%98\"><span class=\"toc-text\">渐变</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BC%AA%E7%B1%BB\"><span class=\"toc-text\">伪类</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%98%B4%E5%BD%B1\"><span class=\"toc-text\">阴影</span></a></li></ol>","author":{"name":"麦当","avatar":"https://cdn.jsdelivr.net/gh/Maidang1/image//image/avatar.jpg","link":""},"mapped":true,"prev_post":{"title":"用typescript 增强vuex的类型","uid":"bbd6549d987a6d65496504fcf8d06748","slug":"vue-ts","date":"2021-04-14T02:36:02.000Z","updated":"2021-04-14T02:36:02.760Z","comments":true,"path":"api/articles/vue-ts.json","keywords":null,"cover":"http://img-blog.csdnimg.cn/20200716163610402.jpg","text":"index.tsimport &#123; createStore &#125; from &#39;vuex&#39;; import &#123; modules &#125; from &#39;.&#x2F;modules&#39;; import &#123; user...","link":"","photos":[],"count_time":{"symbolsCount":"4.3k","symbolsTime":"4 mins."},"categories":[{"name":"vue","slug":"vue","count":4,"path":"api/categories/vue.json"}],"tags":[{"name":"typescript","slug":"typescript","count":1,"path":"api/tags/typescript.json"},{"name":"vuex","slug":"vuex","count":2,"path":"api/tags/vuex.json"}],"author":{"name":"麦当","avatar":"https://cdn.jsdelivr.net/gh/Maidang1/image//image/avatar.jpg","link":""}},"next_post":{"title":"React哲学","uid":"0d342afe6af4aff548d2b83f7ab3c19b","slug":"react哲学","date":"2021-04-07T14:08:51.000Z","updated":"2021-04-11T12:33:55.315Z","comments":true,"path":"api/articles/react哲学.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/Maidang1/image//image/123945-1496983185ad61.jpg","text":"浏览器运行环境js 运行 ---&gt; v8&#x2F;quickJs 浏览器 js&#x2F;html&#x2F;css &#x3D;&#x3D;&#x3D;&#x3D; 框架 React UI框架 ----&gt; 快速响应 配合浏览器的特性开发 不是压榨浏览器性能 环境特...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"React","slug":"React","count":8,"path":"api/categories/React.json"}],"tags":[{"name":"React","slug":"React","count":8,"path":"api/tags/React.json"}],"author":{"name":"麦当","avatar":"https://cdn.jsdelivr.net/gh/Maidang1/image//image/avatar.jpg","link":""}}}