{"title":"react-router-dom","uid":"50552075ed1d1cbaae410e21993db179","slug":"react-router-dom","date":"2021-04-06T14:27:28.383Z","updated":"2021-04-06T14:52:45.563Z","comments":true,"path":"api/articles/react-router-dom.json","keywords":null,"cover":"http://img-blog.csdnimg.cn/20200716163610402.jpg","content":"<h2 id=\"BrowserRouter\"><a href=\"#BrowserRouter\" class=\"headerlink\" title=\"BrowserRouter\"></a>BrowserRouter</h2><span id=\"more\"></span>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">import React, &#123; Component &#125; from &#39;react&#39;;\nimport Context from &#39;.&#x2F;context&#39;;\n\nlet pushState &#x3D; window.history.pushState;\n\nclass HashRouter extends Component &#123;\n  constructor(props) &#123;\n    super(props);\n    this.state &#x3D; &#123;\n      location: &#123; pathname: window.location.pathname, state: null &#125;,\n    &#125;;\n  &#125;\n  componentDidMount() &#123;\n    window.history.pushState &#x3D; (state, title, url) &#x3D;&gt; &#123;\n      pushState.call(window.history, state, title, url);\n      window.onpushstate.call(this, state, url);\n    &#125;;\n    window.onpopstate &#x3D; (event) &#x3D;&gt; &#123;\n      this.setState(&#123;\n        location: &#123;\n          ...this.state.location,\n          pathname: window.location.pathname,\n          state: event.state,\n        &#125;,\n      &#125;);\n    &#125;;\n    window.onpushstate &#x3D; (state, pathname) &#x3D;&gt; &#123;\n      this.setState(&#123;\n        location: &#123;\n          ...this.state.location,\n          pathname: pathname,\n          state: state,\n        &#125;,\n      &#125;);\n    &#125;;\n  &#125;\n  render() &#123;\n    let that &#x3D; this;\n    let value &#x3D; &#123;\n      location: that.state.location,\n      history: &#123;\n        push(to) &#123;\n          &#x2F;** 阻止跳转 *&#x2F;\n          if (that.block) &#123;\n            let confirm &#x3D; window.confirm(\n              that.block(typeof to &#x3D;&#x3D;&#x3D; &#39;object&#39; ? to : &#123; pathname: to &#125;)\n            );\n            if (!confirm) return;\n          &#125;\n          if (typeof to &#x3D;&#x3D;&#x3D; &#39;object&#39;) &#123;\n            let &#123; pathname, state &#125; &#x3D; to;\n            window.history.pushState(state, &#39;&#39;, pathname);\n          &#125; else &#123;\n            window.history.pushState(null, &#39;&#39;, to);\n          &#125;\n        &#125;,\n        block(message) &#123;\n          that.block &#x3D; message;\n        &#125;,\n      &#125;,\n    &#125;;\n    return (\n      &lt;Context.Provider value&#x3D;&#123;value&#125;&gt;&#123;this.props.children&#125;&lt;&#x2F;Context.Provider&gt;\n    );\n  &#125;\n&#125;\n\nexport default HashRouter;</code></pre>\n\n<h2 id=\"context\"><a href=\"#context\" class=\"headerlink\" title=\"context\"></a>context</h2><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&#x2F;** 暴露出整个库的context上下文  *&#x2F;\nimport React from &#39;react&#39;;\n\nconst Context &#x3D; React.createContext();\n\nexport default Context;</code></pre>\n\n<h2 id=\"HashRouter\"><a href=\"#HashRouter\" class=\"headerlink\" title=\"HashRouter\"></a>HashRouter</h2><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">import React, &#123; Component &#125; from &#39;react&#39;;\nimport Context from &#39;.&#x2F;context&#39;;\nclass HashRouter extends Component &#123;\n  constructor(props) &#123;\n    super(props);\n    this.state &#x3D; &#123;\n      location: &#123; pathname: window.location.hash.slice(1), state: null &#125;,\n    &#125;;\n    this.locationState &#x3D; null;\n  &#125;\n  componentDidMount() &#123;\n    window.location.hash &#x3D; window.location.hash || &#39;&#x2F;&#39;;\n    window.addEventListener(&#39;hashchange&#39;, () &#x3D;&gt; &#123;\n      this.setState(&#123;\n        location: &#123;\n          ...this.state.location,\n          pathname: window.location.hash.slice(1),\n          state: this.locationState,\n        &#125;,\n      &#125;);\n    &#125;);\n  &#125;\n  render() &#123;\n    let that &#x3D; this;\n    let value &#x3D; &#123;\n      location: that.state.location,\n      history: &#123;\n        push(to) &#123;\n          &#x2F;** 阻止跳转 *&#x2F;\n          if (that.block) &#123;\n            let confirm &#x3D; window.confirm(\n              that.block(typeof to &#x3D;&#x3D;&#x3D; &#39;object&#39; ? to : &#123; pathname: to &#125;)\n            );\n            if (!confirm) return;\n          &#125;\n          if (typeof to &#x3D;&#x3D;&#x3D; &#39;object&#39;) &#123;\n            let &#123; pathname, state &#125; &#x3D; to;\n            that.locationState &#x3D; state;\n            window.location.hash &#x3D; pathname;\n          &#125; else &#123;\n            that.locationState &#x3D; null;\n            window.location.hash &#x3D; to;\n          &#125;\n        &#125;,\n        block(message) &#123;\n          that.block &#x3D; message;\n        &#125;,\n      &#125;,\n    &#125;;\n    return (\n      &lt;Context.Provider value&#x3D;&#123;value&#125;&gt;&#123;this.props.children&#125;&lt;&#x2F;Context.Provider&gt;\n    );\n  &#125;\n&#125;\n\nexport default HashRouter;</code></pre>\n\n<h2 id=\"Link\"><a href=\"#Link\" class=\"headerlink\" title=\"Link\"></a>Link</h2><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">import React, &#123; Component &#125; from &#39;react&#39;;\nimport Context from &#39;.&#x2F;context&#39;;\nclass Link extends Component &#123;\n  static contextType &#x3D; Context;\n  constructor(props) &#123;\n    super(props);\n    this.state &#x3D; &#123;&#125;;\n  &#125;\n  render() &#123;\n    &#x2F;** 注意合并上部传来的props *&#x2F;\n    return (\n      &#x2F;&#x2F; eslint-disable-next-line jsx-a11y&#x2F;anchor-is-valid\n      &lt;a\n        &#123;...this.props&#125;\n        onClick&#x3D;&#123;() &#x3D;&gt; &#123;\n          this.props.context.history.push(this.props.to);\n        &#125;&#125;\n      &gt;\n        &#123;this.props.children&#125;\n      &lt;&#x2F;a&gt;\n    );\n  &#125;\n&#125;\n\nexport default Link;\n\n&#x2F;**\n * &lt;a href&#x3D;&#123;&#96;#$&#123;this.props.to&#125;&#96;&#125;&gt;&#123;this.props.children&#125;&lt;&#x2F;a&gt;;\n *&#x2F;</code></pre>\n\n<h2 id=\"MenuLink\"><a href=\"#MenuLink\" class=\"headerlink\" title=\"MenuLink\"></a>MenuLink</h2><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">import React, &#123; Component &#125; from &#39;react&#39;;\nimport Route from &#39;.&#x2F;Route&#39;;\nimport Link from &#39;.&#x2F;Link&#39;;\n&#x2F;**自定义导航 正增加高亮属性 *&#x2F;\n\n&#x2F;** Route渲染内容有三种方法 component render children *&#x2F;\n&#x2F;&#x2F; component render 路径匹配渲染\n&#x2F;&#x2F; children 都会渲染\nfunction MenuLink(&#123; to, exact, children &#125;) &#123;\n  return (\n    &lt;Route\n      path&#x3D;&#123;to&#125;\n      exact&#x3D;&#123;exact&#125;\n      children&#x3D;&#123;(props) &#x3D;&gt; (\n        &lt;li className&#x3D;&#123;props.match ? &#39;active&#39; : &#39;&#39;&#125;&gt;\n          &lt;Link to&#x3D;&#123;to&#125;&gt;&#123;children&#125;&lt;&#x2F;Link&gt;\n        &lt;&#x2F;li&gt;\n      )&#125;\n    &gt;&lt;&#x2F;Route&gt;\n  );\n&#125;\n\nexport default MenuLink;</code></pre>\n\n<h2 id=\"Prompt\"><a href=\"#Prompt\" class=\"headerlink\" title=\"Prompt\"></a>Prompt</h2><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">import React, &#123; Component &#125; from &#39;react&#39;;\nimport Context from &#39;.&#x2F;context&#39;;\nclass Prompt extends Component &#123;\n  static contextType &#x3D; Context;\n\n  componentWillUnmount() &#123;\n    this.history.block(null);\n  &#125;\n  render() &#123;\n    let history &#x3D; this.context.history;\n    const &#123; when, messaga &#125; &#x3D; this.props;\n    if (when) &#123;\n      history.block(messaga);\n    &#125; else &#123;\n      history.block(null);\n    &#125;\n\n    return null;\n  &#125;\n&#125;\n\nexport default Prompt;</code></pre>\n\n<h2 id=\"Redirect\"><a href=\"#Redirect\" class=\"headerlink\" title=\"Redirect\"></a>Redirect</h2><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">import &#123; Component &#125; from &#39;react&#39;;\nimport Context from &#39;.&#x2F;context&#39;;\nclass Redirect extends Component &#123;\n  static contextType &#x3D; Context;\n  render() &#123;\n    this.context.history.push(this.props.to);\n    return null;\n  &#125;\n&#125;\n\nexport default Redirect;</code></pre>\n\n<h2 id=\"Route\"><a href=\"#Route\" class=\"headerlink\" title=\"Route\"></a>Route</h2><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">import PathToRegexp from &#39;path-to-regexp&#39;;\nimport React, &#123; Component &#125; from &#39;react&#39;;\nimport Context from &#39;.&#x2F;context&#39;;\nclass Route extends Component &#123;\n  static contextType &#x3D; Context;\n  constructor(props) &#123;\n    super(props);\n    this.state &#x3D; &#123;&#125;;\n  &#125;\n  render() &#123;\n    let &#123; pathname &#125; &#x3D; this.context.location;\n    let &#123;\n      path &#x3D; &#39;&#x2F;&#39;,\n      component: Component,\n      exact &#x3D; false,\n      render,\n      children,\n    &#125; &#x3D; this.props;\n    let paramNames &#x3D; [];\n    let regxp &#x3D; PathToRegexp(path, paramNames, &#123; end: exact &#125;);\n    let result &#x3D; pathname.match(regxp);\n    let props &#x3D; &#123;\n      location: this.context.location,\n      history: this.props.history,\n    &#125;;\n    if (result) &#123;\n      paramNames &#x3D; paramNames.map((item) &#x3D;&gt; item.name);\n      let [url, ...values] &#x3D; result;\n      let params &#x3D; &#123;&#125;;\n      for (let i &#x3D; 0; i &lt; paramNames.length; i++) &#123;\n        params[paramNames[i]] &#x3D; values[i];\n      &#125;\n      props.match &#x3D; &#123; params, path, url, isExect: url &#x3D;&#x3D;&#x3D; pathname &#125;;\n      if (Component) &#123;\n        return &lt;Component &#123;...props&#125; &#x2F;&gt;;\n      &#125; else if (render) &#123;\n        &#x2F;** 检查属性 兼容性 *&#x2F;\n        return render(props);\n      &#125; else if (children) &#123;\n        return children(props);\n      &#125; else &#123;\n        return null;\n      &#125;\n    &#125; else &#123;\n      if (children) return children(props);\n      else return null;\n    &#125;\n  &#125;\n&#125;\n\nexport default Route;</code></pre>\n\n<h2 id=\"Switch\"><a href=\"#Switch\" class=\"headerlink\" title=\"Switch\"></a>Switch</h2><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">import &#123; Component &#125; from &#39;react&#39;;\nimport PathToRegexp from &#39;path-to-regexp&#39;;\nclass Switch extends Component &#123;\n  constructor(props) &#123;\n    super(props);\n    this.state &#x3D; &#123;&#125;;\n  &#125;\n  render() &#123;\n    let &#123; pathname &#125; &#x3D; this.context.location;\n    let children &#x3D; Array.isArray(this.props.children)\n      ? this.props\n      : [this.props.children];\n    for (let i &#x3D; 0; i &lt; children.length; i++) &#123;\n      let child &#x3D; children[i];\n      let &#123; path &#x3D; &#39;&#x2F;&#39;, exect &#x3D; false &#125; &#x3D; child.props;\n      let pathNames &#x3D; [];\n      let reg &#x3D; PathToRegexp(path, pathNames, &#123; end: exect &#125;);\n      let result &#x3D; pathname.match(reg);\n      if (result) &#123;\n        return child; &#x2F;** react的元素 React.createElement *&#x2F;\n      &#125;\n    &#125;\n    return null;\n  &#125;\n&#125;\n\nexport default Switch;</code></pre>\n\n<h2 id=\"WithRouter\"><a href=\"#WithRouter\" class=\"headerlink\" title=\"WithRouter\"></a>WithRouter</h2><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">import React from &#39;react&#39;;\nimport Route from &#39;.&#x2F;Route&#39;;\n\n&#x2F;&#x2F; eslint-disable-next-line import&#x2F;no-anonymous-default-export\nexport default function (WrappedComponent) &#123;\n  return (props) &#x3D;&gt; &lt;Route component&#x3D;&#123;WrappedComponent&#125; &#x2F;&gt;;\n&#125;</code></pre>\n","feature":null,"text":"BrowserRouter import React, &#123; Component &#125; from &#39;react&#39;; import Context from &#39;.&#x2F;context&#39;; let pushState &#x3D;...","link":"","photos":[],"count_time":{"symbolsCount":"9.7k","symbolsTime":"9 mins."},"categories":[{"name":"React","slug":"React","count":9,"path":"api/categories/React.json"}],"tags":[{"name":"React","slug":"React","count":9,"path":"api/tags/React.json"},{"name":"react-router-dom","slug":"react-router-dom","count":1,"path":"api/tags/react-router-dom.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#BrowserRouter\"><span class=\"toc-text\">BrowserRouter</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#context\"><span class=\"toc-text\">context</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#HashRouter\"><span class=\"toc-text\">HashRouter</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Link\"><span class=\"toc-text\">Link</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#MenuLink\"><span class=\"toc-text\">MenuLink</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Prompt\"><span class=\"toc-text\">Prompt</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Redirect\"><span class=\"toc-text\">Redirect</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Route\"><span class=\"toc-text\">Route</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Switch\"><span class=\"toc-text\">Switch</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#WithRouter\"><span class=\"toc-text\">WithRouter</span></a></li></ol>","author":{"name":"麦当","avatar":"https://cdn.jsdelivr.net/gh/Maidang1/image//image/avatar.jpg","link":""},"mapped":true,"prev_post":{"title":"react-setState","uid":"89dff2a6379feafc73b36875ccf71035","slug":"react-setState","date":"2021-04-06T14:27:28.394Z","updated":"2021-04-06T14:53:18.661Z","comments":true,"path":"api/articles/react-setState.json","keywords":null,"cover":"http://img-blog.csdnimg.cn/20200716163610402.jpg","text":"react-state 流程 index.js&#x2F;** 事务 用wrapper包装起来 *&#x2F; class Transaction &#123; constructor(wrappers) &#123; this.wrappers &#x3D; wrappers;...","link":"","photos":[],"count_time":{"symbolsCount":"4.2k","symbolsTime":"4 mins."},"categories":[{"name":"React","slug":"React","count":9,"path":"api/categories/React.json"}],"tags":[{"name":"React","slug":"React","count":9,"path":"api/tags/React.json"}],"author":{"name":"麦当","avatar":"https://cdn.jsdelivr.net/gh/Maidang1/image//image/avatar.jpg","link":""}},"next_post":{"title":"react Hooks","uid":"fa08fd35cb36d755ed7492a61cf66138","slug":"react-hook","date":"2021-04-06T14:27:28.370Z","updated":"2021-04-06T14:53:18.661Z","comments":true,"path":"api/articles/react-hook.json","keywords":null,"cover":"http://img-blog.csdnimg.cn/20200716163610402.jpg","text":"useState 每次渲染都是一个独立的闭包 每次渲染都会有自己的 props 和 state 每次渲染后会有自己的时间处理函数 function Counter() &#123; let [num, setNum] &#x3D; useState(0); function al...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"React","slug":"React","count":9,"path":"api/categories/React.json"}],"tags":[{"name":"React","slug":"React","count":9,"path":"api/tags/React.json"},{"name":"react hook","slug":"react-hook","count":1,"path":"api/tags/react-hook.json"}],"author":{"name":"麦当","avatar":"https://cdn.jsdelivr.net/gh/Maidang1/image//image/avatar.jpg","link":""}}}