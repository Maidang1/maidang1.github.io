{"title":"React哲学","uid":"0d342afe6af4aff548d2b83f7ab3c19b","slug":"react哲学","date":"2021-04-07T14:08:51.000Z","updated":"2021-04-11T12:33:55.315Z","comments":true,"path":"api/articles/react哲学.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/Maidang1/image//image/123945-1496983185ad61.jpg","content":"<h2 id=\"浏览器运行环境\"><a href=\"#浏览器运行环境\" class=\"headerlink\" title=\"浏览器运行环境\"></a>浏览器运行环境</h2><pre class=\"line-numbers language-txt\" data-language=\"txt\"><code class=\"language-txt\">js 运行 ---&gt; v8&#x2F;quickJs\n浏览器 js&#x2F;html&#x2F;css &#x3D;&#x3D;&#x3D;&#x3D; 框架\nReact UI框架 ----&gt; 快速响应 配合浏览器的特性开发 不是压榨浏览器性能\n\n环境特点配合框架\n框架有个运行时环境 根据不同的环境生成不同的描述语言 放进不同的容器中\n然后配合生成不同的程序， 配合不同的操作系统</code></pre>\n\n<h2 id=\"浏览器\"><a href=\"#浏览器\" class=\"headerlink\" title=\"浏览器\"></a>浏览器</h2><p><strong>浏览器进程</strong></p>\n<ul>\n<li>网络线程 (dns tcp ip 跨域 mime)</li>\n<li>UI 线程</li>\n<li>文件读写(store)线程</li>\n</ul>\n<p><strong>渲染进程</strong></p>\n<ul>\n<li>合成线程</li>\n<li>主线程 (js 执行 html 解析 垃圾回收)</li>\n<li>tile work 线程</li>\n</ul>\n<p><strong>GPU 进程</strong></p>\n<ul>\n<li>GPU 线程 (绘图)</li>\n</ul>\n<p><strong>渲染</strong></p>\n<p>资源经过网络线程加载之后 送给合成线程</p>\n<p>一帧进行的操作<br>requestAnimationFrame(上一帧绑定的回调)<br>Parse HTML (DOM 树)<br>Receive Styles （CSSOM）<br>LayoutUI (真正要展示的树 每个节点有相应的属性 宽高 没有层级)<br>Update Layer Tree 层叠上下文 Z 轴(分层)<br>Paint 绘制记录表 (Skia Graphics Library)</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Maidang1/image//image/image-20210407225602001.png\" alt=\"image-20210407225602001\"></p>\n<p>Composite (合成阶段)</p>\n<p>光栅化 (切块) CPU(几何数据) ===&gt; GPU(像素点信息结合) 存储</p>\n<p>合成线程返回信息</p>\n<p>{<br>(几何信息): (像素信息 内存地址) 同时标记非快速滚动区域(注册事件)<br>}</p>\n<p>下次渲染 合成线程 (点击的鼠标有位置和非快速滚动区域作比较，不是非快速滚动区域作比较 不需要主线程参与本次更新)</p>\n<p>requestidleCallback 本真执行(有时间就执行 没时间就延后执行)</p>\n<p>react &lt; 17 事件绑定在 document 所以每次都会有主线程<br>react &gt; 17 进行了更加细致的事件绑定</p>\n<p>========&gt; 如何让框架更加契合浏览器的特点</p>\n<p>长任务拆分成小任务</p>\n<p>中断</p>\n<p>react—-&gt; js</p>\n<p>管理数据</p>\n<p>js 协程 (yeild) 任务中断</p>\n<p>requestAnimitionFrame ===&gt; requestidleCallback</p>\n<p>rect 任务维度 UI</p>\n<p>维护一个数据结构 fiber 类似于 PCB 记录中断的状态</p>\n<p>react 契合浏览器框架 ====&gt;v8(js 引擎) 可以做跨端应用</p>\n<p>v8 quickjs ====&gt; libuv(事件调度) skia 引擎</p>\n<p>flutter(dart) ====&gt; skia<br>浏览器 js(canvas)====&gt; skia</p>\n<p>用户卡顿 渲染频率 ====&gt; 执行时间少</p>\n<p>dom 长任务 js ====&gt; 可中断 ====&gt; yeild PCB</p>\n<p>长任务：<br>每一帧 dom 的删除和插入操作 遍历<br>dom 的创建 插入 遍历 编程可中断的结构</p>\n<p>dom 树结构 保留结构的关系<br>中断节点和其他节点的关联关系 维护一个 fiber 节点的信息即可</p>\n<p>小任务:</p>\n<p>可以恢复的数据结构（fiber）</p>\n<p>render ===&gt; 查找多任务调度（优先级调度）=====&gt; schedule 每次最多执行 5ms</p>\n<p>render(同步)\\setState\\foreUpdate</p>\n<p>fiber 更新 收集所有的任务<br>每次做的小任务 创建本节点的 dom 结构 创建本节点的子 fiber（保留了他们之间的关系）实现了可中断更新</p>\n","feature":null,"text":"浏览器运行环境js 运行 ---&gt; v8&#x2F;quickJs 浏览器 js&#x2F;html&#x2F;css &#x3D;&#x3D;&#x3D;&#x3D; 框架 React UI框架 ----&gt; 快速响应 配合浏览器的特性开发 不是压榨浏览器性能 环境特...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"React","slug":"React","count":9,"path":"api/categories/React.json"}],"tags":[{"name":"React","slug":"React","count":9,"path":"api/tags/React.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%B5%8F%E8%A7%88%E5%99%A8%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83\"><span class=\"toc-text\">浏览器运行环境</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%B5%8F%E8%A7%88%E5%99%A8\"><span class=\"toc-text\">浏览器</span></a></li></ol>","author":{"name":"麦当","avatar":"https://cdn.jsdelivr.net/gh/Maidang1/image//image/avatar.jpg","link":""},"mapped":true,"prev_post":{"title":"css 好看的案例","uid":"d7f18c2655e3f93631b257b366acd0c3","slug":"cssExample","date":"2021-04-11T10:15:28.048Z","updated":"2021-05-28T12:08:50.387Z","comments":true,"path":"api/articles/cssExample.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/Maidang1/image//image/beach-2089936_1920.jpg","text":"渐变 &lt;body&gt; &lt;div class&#x3D;&quot;box&quot;&gt;&lt;h2&gt;Gradient&lt;&#x2F;h2&gt;&lt;&#x2F;div&gt; &lt;div class&#x3D;&quot;box&quot;...","link":"","photos":[],"count_time":{"symbolsCount":"8.5k","symbolsTime":"8 mins."},"categories":[{"name":"css","slug":"css","count":1,"path":"api/categories/css.json"}],"tags":[{"name":"css","slug":"css","count":1,"path":"api/tags/css.json"}],"author":{"name":"麦当","avatar":"https://cdn.jsdelivr.net/gh/Maidang1/image//image/avatar.jpg","link":""}},"next_post":{"title":"svelte","uid":"159e1d8888631750dd50b9032a4b1226","slug":"svelte","date":"2021-04-07T12:07:51.000Z","updated":"2021-04-07T12:59:01.271Z","comments":true,"path":"api/articles/svelte.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/Maidang1/image//image/114936-15934889760420.jpg","text":"SvelteVue.min.js Vue.runtime.js (dom diff 虚拟 dom) 运行时 React Vue 虚拟 dom ---&gt; dom diff 提升性能? html 输出 domReady 提前 重绘 重排(重新布局) FID FP FCP LCP...","link":"","photos":[],"count_time":{"symbolsCount":497,"symbolsTime":"1 mins."},"categories":[{"name":"JavaScript","slug":"JavaScript","count":5,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"svelte","slug":"svelte","count":1,"path":"api/tags/svelte.json"}],"author":{"name":"麦当","avatar":"https://cdn.jsdelivr.net/gh/Maidang1/image//image/avatar.jpg","link":""}}}