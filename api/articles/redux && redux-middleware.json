{"title":"redux && redux-middleware","uid":"f45f275952c50e73ccfd35d25a4b9c92","slug":"redux && redux-middleware","date":"2021-04-06T14:27:28.404Z","updated":"2021-04-06T14:53:18.660Z","comments":true,"path":"api/articles/redux && redux-middleware.json","keywords":null,"cover":"http://img-blog.csdnimg.cn/20200716163610402.jpg","content":"<h2 id=\"redux\"><a href=\"#redux\" class=\"headerlink\" title=\"redux\"></a>redux</h2><span id=\"more\"></span>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">import &#123; createStore &#125; from &#39;redux&#39;;\nlet INC &#x3D; Symbol.for(&#39;INC&#39;);\nlet DEC &#x3D; Symbol.for(&#39;DEC&#39;);\nlet initialState &#x3D; 0;\nfunction reducer(state &#x3D; initialState, action) &#123;\n  switch (action.type) &#123;\n    case INC:\n      return state + 1;\n    case DEC:\n      return state - 1;\n    default:\n      return state;\n  &#125;\n&#125;\n\n&#x2F;**\n * redux action有要求 有个不是undefined的type类型\n *&#x2F;\nlet store &#x3D; createStore(reducer);\n\nlet state &#x3D; store.getState();\nlet countValue &#x3D; document.getElementById(&#39;counter-value&#39;);\nlet inc &#x3D; document.getElementById(&#39;inc-btn&#39;);\nlet dec &#x3D; document.getElementById(&#39;dec-btn&#39;);\nconsole.log(state);\n\nfunction render() &#123;\n  countValue.innerHTML &#x3D; store.getState();\n&#125;\n\nrender();\n\nstore.subscribe(render);\n\ninc.addEventListener(&#39;click&#39;, function () &#123;\n  store.dispatch(&#123; type: INC &#125;);\n&#125;);\n\ndec.addEventListener(&#39;click&#39;, function () &#123;\n  store.dispatch(&#123; type: DEC &#125;);\n&#125;);</code></pre>\n\n<h2 id=\"create-store-js-版本一\"><a href=\"#create-store-js-版本一\" class=\"headerlink\" title=\"create-store.js(版本一)\"></a>create-store.js(版本一)</h2><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">import isPlainObject from &#39;.&#x2F;utils&#x2F;isPlainObject&#39;;\nimport ActionTypes from &#39;.&#x2F;utils&#x2F;actionType&#39;;\nexport default function createStore(reducer, preloadedState) &#123;\n  if (typeof reducer !&#x3D;&#x3D; &#39;function&#39;) &#123;\n    throw new Error(&#39;reducer must be a function&#39;);\n  &#125;\n\n  &#x2F;*******************************&#x2F;\n  &#x2F;** initiallize the base property  *&#x2F;\n  let currentState &#x3D; preloadedState;\n  let currentReducer &#x3D; reducer;\n  let currentListeners &#x3D; [];\n  &#x2F;*******************************&#x2F;\n\n  function getState() &#123;\n    return currentState;\n  &#125;\n\n  function dispatch(action) &#123;\n    if (!isPlainObject(action)) &#123;\n      throw new Error(&#39;action must be a plainObject&#39;);\n    &#125;\n    if (typeof action.type &#x3D;&#x3D;&#x3D; &#39;undefined&#39;) &#123;\n      throw new Error(&#39;action need a type property&#39;);\n    &#125;\n    currentState &#x3D; currentReducer(currentState, action);\n    for (let i &#x3D; 0; i &lt; currentListeners.length; i++) &#123;\n      let listener &#x3D; currentListeners[i];\n      listener();\n    &#125;\n    return action;\n  &#125;\n\n  dispatch(&#123; type: ActionTypes.INIT &#125;);\n  function subScribe(listener) &#123;\n    currentListeners.push(listener);\n    return function unsubScribe() &#123;\n      const index &#x3D; currentListeners.indexOf(listener);\n      currentListeners.splice(index, 1);\n    &#125;;\n  &#125;\n\n  return &#123;\n    getState,\n    subScribe,\n    dispatch,\n  &#125;;\n&#125;</code></pre>\n\n<h2 id=\"bindActionCreator\"><a href=\"#bindActionCreator\" class=\"headerlink\" title=\"bindActionCreator\"></a>bindActionCreator</h2><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">function bindActionCreator(actionCreator, dispatch) &#123;\n  return function () &#123;\n    return dispatch(actionCreator.apply(this, arguments));\n  &#125;;\n&#125;\n\nfunction bindActionCreators(actionCreators, dispatch) &#123;\n  if (typeof actionCreators &#x3D;&#x3D;&#x3D; &#39;function&#39;) &#123;\n    return bindActionCreator(actionCreators, dispatch);\n  &#125;\n  const boundActionCreators &#x3D; &#123;&#125;;\n  for (const key in actionCreators) &#123;\n    boundActionCreators[key] &#x3D; bindActionCreator(actionCreators[key], dispatch);\n  &#125;\n  return boundActionCreators;\n&#125;\n\nexport default bindActionCreators;</code></pre>\n\n<h2 id=\"combineReducer\"><a href=\"#combineReducer\" class=\"headerlink\" title=\"combineReducer\"></a>combineReducer</h2><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">export default function combineReducer(reducers) &#123;\n  const reducerkeys &#x3D; Object.keys(reducers);\n\n  return function (state &#x3D; &#123;&#125;, action) &#123;\n    let nextState &#x3D; &#123;&#125;;\n    for (let i &#x3D; 0; i &lt; reducerkeys.length; i++) &#123;\n      const key &#x3D; reducerkeys[i];\n      const reducer &#x3D; reducers[key];\n      const previousStateForKey &#x3D; state[key];\n      const nextStateForkey &#x3D; reducer(previousStateForKey, action);\n      nextState[key] &#x3D; nextStateForkey;\n    &#125;\n\n    return nextState;\n  &#125;;\n&#125;</code></pre>\n\n<h2 id=\"util\"><a href=\"#util\" class=\"headerlink\" title=\"util\"></a>util</h2><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">export default function isPlainObject(obj) &#123;\n  if (typeof obj !&#x3D;&#x3D; &#39;object&#39; || obj &#x3D;&#x3D;&#x3D; null) &#123;\n    return false;\n  &#125;\n\n  let proto &#x3D; obj;\n  while (Object.getPrototypeOf(proto)) &#123;\n    proto &#x3D; Object.getPrototypeOf(proto);\n  &#125;\n\n  return Object.getPrototypeOf(obj) &#x3D;&#x3D;&#x3D; proto;\n&#125;</code></pre>\n\n<h2 id=\"applyMiddleWare\"><a href=\"#applyMiddleWare\" class=\"headerlink\" title=\"applyMiddleWare\"></a>applyMiddleWare</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">function applyMiddleWare(...middlewares) &#123;\n  return function (createStore) &#123;\n    return function (reducer) &#123;\n      let store &#x3D; createStore();\n      let dispath &#x3D; () &#x3D;&gt; &#123;\n        throw new Error();\n      &#125;;\n      let middlewareAPI &#x3D; &#123;\n        getStore: store.getState,\n        dispatch: (...args) &#x3D;&gt; dispath(...args),\n      &#125;;\n      &#x2F;&#x2F; middleware &#x3D; middleware(store);\n      &#x2F;&#x2F; dispath &#x3D; middleware(store.dispatch);\n\n      const chain &#x3D; middlewares.map((middleware) &#x3D;&gt; middleware(middlewareAPI));\n      dispath &#x3D; componse(...chain)(store.dispatch)\n      return &#123;\n        ...store,\n        dispath,\n      &#125;;\n    &#125;;\n  &#125;;\n&#125;</code></pre>\n\n<h2 id=\"compose\"><a href=\"#compose\" class=\"headerlink\" title=\"compose\"></a>compose</h2><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">function compose(...funcs) &#123;\n  if (funcs.length &#x3D;&#x3D;&#x3D; 0) &#123;\n    return (args) &#x3D;&gt; args;\n  &#125;\n  if (funcs.length &#x3D;&#x3D;&#x3D; 1) &#123;\n    return funcs[0];\n  &#125;\n\n  return funcs.reduce((a, b) &#x3D;&gt; (...args) &#x3D;&gt; a(b(...args)));\n&#125;\n\nexport default compose;</code></pre>\n\n<h2 id=\"react-reudx\"><a href=\"#react-reudx\" class=\"headerlink\" title=\"react-reudx\"></a>react-reudx</h2><h3 id=\"index-js\"><a href=\"#index-js\" class=\"headerlink\" title=\"index.js\"></a>index.js</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">import Provider from &#39;.&#x2F;Provider&#39;;\nimport connect from &#39;.&#x2F;connect&#39;;\n\nexport &#123; Provider, connect &#125;;</code></pre>\n\n<h3 id=\"Provider-js\"><a href=\"#Provider-js\" class=\"headerlink\" title=\"Provider.js\"></a>Provider.js</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">import React, &#123; Component &#125; from &#39;react&#39;;\nimport ReduxContext from &#39;.&#x2F;context&#39;;\n\nclass Provider extends Component &#123;\n  render() &#123;\n    return (\n      &lt;ReduxContext.Provider value&#x3D;&#123;this.props.store&#125;&gt;\n        &#123;this.props.children&#125;\n      &lt;&#x2F;ReduxContext.Provider&gt;\n    );\n  &#125;\n&#125;\n\nexport default Provider;</code></pre>\n\n<h3 id=\"connect-js\"><a href=\"#connect-js\" class=\"headerlink\" title=\"connect.js\"></a>connect.js</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">import React from &#39;react&#39;;\nimport ReduxContext from &#39;.&#x2F;context&#39;;\nimport bindActionCreator from &#39;..&#x2F;redux&#x2F;bindActionCreator&#39;;\nexport default function connect(mapStateToProps, mapDispatchToProps) &#123;\n  return function (WrappedComponent) &#123;\n    return class extends React.Component &#123;\n      static contextType &#x3D; ReduxContext;\n      constructor(props, context) &#123;\n        super(props);\n        &#x2F;** context &#x3D; &#123;store: this.props.store&#125; *&#x2F;\n        this.state &#x3D; mapDispatchToProps(context.store.getState());\n      &#125;\n      componentDidCatch() &#123;\n        this.unsubscribe &#x3D; this.context.store.subscribe(() &#x3D;&gt; &#123;\n          this.setState(mapStateToProps(this.context.store.getState()));\n        &#125;);\n      &#125;\n      componentWillUnmount() &#123;\n        this.unsubscribe();\n      &#125;\n      render() &#123;\n        let action &#x3D; bindActionCreator(\n          mapDispatchToProps,\n          this.context.store.dispatch\n        );\n        return &lt;WrappedComponent &#123;...this.state&#125; &#123;...action&#125; &#x2F;&gt;;\n      &#125;\n    &#125;;\n  &#125;;\n&#125;</code></pre>\n\n<h3 id=\"context-js\"><a href=\"#context-js\" class=\"headerlink\" title=\"context.js\"></a>context.js</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">import React from &#39;react&#39;;\n\nconst ReduxContext &#x3D; React.createContext(null);\nexport default ReduxContext;</code></pre>\n\n<h2 id=\"redux-promise\"><a href=\"#redux-promise\" class=\"headerlink\" title=\"redux-promise\"></a>redux-promise</h2><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">function isPromise(obj) &#123;\n  return (\n    !!obj &amp;&amp;\n    (typeof obj &#x3D;&#x3D;&#x3D; &#39;object&#39; || typeof obj &#x3D;&#x3D;&#x3D; &#39;function&#39;) &amp;&amp;\n    typeof obj.then &#x3D;&#x3D;&#x3D; &#39;function&#39;\n  );\n&#125;\nexport default function (&#123; dispatch, getState &#125;) &#123;\n  return (next) &#x3D;&gt; (action) &#x3D;&gt; &#123;\n    return isPromise(action.payload)\n      ? action.payload.then((result) &#x3D;&gt; &#123;\n          dispatch(&#123; ...action, payload: result &#125;);\n        &#125;)\n      : next(action);\n  &#125;;\n&#125;</code></pre>\n\n<h2 id=\"reudx-thunk\"><a href=\"#reudx-thunk\" class=\"headerlink\" title=\"reudx-thunk\"></a>reudx-thunk</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">function createThunkMiddleware() &#123;\n  return (&#123; dispatch, getState &#125; &#x2F;** middlewareAPI *&#x2F;) &#x3D;&gt; (next) &#x3D;&gt; (\n    action\n  ) &#x3D;&gt; &#123;\n    if (typeof action &#x3D;&#x3D;&#x3D; &#39;function&#39;) &#123;\n      return action(dispatch, getState);\n    &#125;\n    return next(action);\n  &#125;;\n&#125;\n</code></pre>\n","feature":null,"text":"redux import &#123; createStore &#125; from &#39;redux&#39;; let INC &#x3D; Symbol.for(&#39;INC&#39;); let DEC &#x3D; Symbol.for(&#39;DEC&#3...","link":"","photos":[],"count_time":{"symbolsCount":"8.2k","symbolsTime":"7 mins."},"categories":[{"name":"React","slug":"React","count":9,"path":"api/categories/React.json"}],"tags":[{"name":"React","slug":"React","count":9,"path":"api/tags/React.json"},{"name":"redux","slug":"redux","count":1,"path":"api/tags/redux.json"},{"name":"redux-middleware","slug":"redux-middleware","count":1,"path":"api/tags/redux-middleware.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#redux\"><span class=\"toc-text\">redux</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#create-store-js-%E7%89%88%E6%9C%AC%E4%B8%80\"><span class=\"toc-text\">create-store.js(版本一)</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#bindActionCreator\"><span class=\"toc-text\">bindActionCreator</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#combineReducer\"><span class=\"toc-text\">combineReducer</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#util\"><span class=\"toc-text\">util</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#applyMiddleWare\"><span class=\"toc-text\">applyMiddleWare</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#compose\"><span class=\"toc-text\">compose</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#react-reudx\"><span class=\"toc-text\">react-reudx</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#index-js\"><span class=\"toc-text\">index.js</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Provider-js\"><span class=\"toc-text\">Provider.js</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#connect-js\"><span class=\"toc-text\">connect.js</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#context-js\"><span class=\"toc-text\">context.js</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#redux-promise\"><span class=\"toc-text\">redux-promise</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#reudx-thunk\"><span class=\"toc-text\">reudx-thunk</span></a></li></ol>","author":{"name":"麦当","avatar":"https://cdn.jsdelivr.net/gh/Maidang1/image//image/avatar.jpg","link":""},"mapped":true,"prev_post":{"title":"Symbol 基础学习","uid":"ba2efac7316616866db1719079267951","slug":"symbol","date":"2021-04-06T14:27:28.412Z","updated":"2021-04-06T14:53:18.661Z","comments":true,"path":"api/articles/symbol.json","keywords":null,"cover":"http://img-blog.csdnimg.cn/20200716163610402.jpg","text":"Symbol 内置符号 ECMAScript 6 也引入了一批常用内置符号（well-known symbol），用于暴露语言内部行为，开发者可以直接访问、重写或模拟这些行为。这些内置符号都以 Symbol 工厂函数字符串属性的形式存在。这些内置符号最重要的用途之一是重新定义它们...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"JavaScript","slug":"JavaScript","count":5,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":4,"path":"api/tags/JavaScript.json"}],"author":{"name":"麦当","avatar":"https://cdn.jsdelivr.net/gh/Maidang1/image//image/avatar.jpg","link":""}},"next_post":{"title":"react-setState","uid":"89dff2a6379feafc73b36875ccf71035","slug":"react-setState","date":"2021-04-06T14:27:28.394Z","updated":"2021-04-06T14:53:18.661Z","comments":true,"path":"api/articles/react-setState.json","keywords":null,"cover":"http://img-blog.csdnimg.cn/20200716163610402.jpg","text":"react-state 流程 index.js&#x2F;** 事务 用wrapper包装起来 *&#x2F; class Transaction &#123; constructor(wrappers) &#123; this.wrappers &#x3D; wrappers;...","link":"","photos":[],"count_time":{"symbolsCount":"4.2k","symbolsTime":"4 mins."},"categories":[{"name":"React","slug":"React","count":9,"path":"api/categories/React.json"}],"tags":[{"name":"React","slug":"React","count":9,"path":"api/tags/React.json"}],"author":{"name":"麦当","avatar":"https://cdn.jsdelivr.net/gh/Maidang1/image//image/avatar.jpg","link":""}}}