{"title":"redux && redux-middleware","uid":"f45f275952c50e73ccfd35d25a4b9c92","slug":"redux && redux-middleware","date":"2021-04-06T14:27:28.404Z","updated":"2021-04-06T14:53:18.660Z","comments":true,"path":"api/articles/redux && redux-middleware.json","keywords":null,"cover":"http://img-blog.csdnimg.cn/20200716163610402.jpg","content":"<h2 id=\"redux\"><a href=\"#redux\" class=\"headerlink\" title=\"redux\"></a>redux</h2><span id=\"more\"></span>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; createStore &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;redux&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> INC = <span class=\"built_in\">Symbol</span>.for(<span class=\"string\">&#x27;INC&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">let</span> DEC = <span class=\"built_in\">Symbol</span>.for(<span class=\"string\">&#x27;DEC&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">let</span> initialState = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">reducer</span>(<span class=\"params\">state = initialState, action</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">switch</span> (action.type) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> INC:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> state + <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> DEC:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> state - <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">default</span>:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> state;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * redux action有要求 有个不是undefined的type类型</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> store = createStore(reducer);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> state = store.getState();</span><br><span class=\"line\"><span class=\"keyword\">let</span> countValue = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&#x27;counter-value&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">let</span> inc = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&#x27;inc-btn&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">let</span> dec = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&#x27;dec-btn&#x27;</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(state);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">render</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  countValue.innerHTML = store.getState();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">render();</span><br><span class=\"line\"></span><br><span class=\"line\">store.subscribe(render);</span><br><span class=\"line\"></span><br><span class=\"line\">inc.addEventListener(<span class=\"string\">&#x27;click&#x27;</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  store.dispatch(&#123; <span class=\"attr\">type</span>: INC &#125;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">dec.addEventListener(<span class=\"string\">&#x27;click&#x27;</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  store.dispatch(&#123; <span class=\"attr\">type</span>: DEC &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"create-store-js-版本一\"><a href=\"#create-store-js-版本一\" class=\"headerlink\" title=\"create-store.js(版本一)\"></a>create-store.js(版本一)</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> isPlainObject <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./utils/isPlainObject&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> ActionTypes <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./utils/actionType&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createStore</span>(<span class=\"params\">reducer, preloadedState</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> reducer !== <span class=\"string\">&#x27;function&#x27;</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">&#x27;reducer must be a function&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/*******************************/</span></span><br><span class=\"line\">  <span class=\"comment\">/** initiallize the base property  */</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> currentState = preloadedState;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> currentReducer = reducer;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> currentListeners = [];</span><br><span class=\"line\">  <span class=\"comment\">/*******************************/</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getState</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> currentState;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">dispatch</span>(<span class=\"params\">action</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!isPlainObject(action)) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">&#x27;action must be a plainObject&#x27;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> action.type === <span class=\"string\">&#x27;undefined&#x27;</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">&#x27;action need a type property&#x27;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    currentState = currentReducer(currentState, action);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; currentListeners.length; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> listener = currentListeners[i];</span><br><span class=\"line\">      listener();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> action;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  dispatch(&#123; <span class=\"attr\">type</span>: ActionTypes.INIT &#125;);</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">subScribe</span>(<span class=\"params\">listener</span>) </span>&#123;</span><br><span class=\"line\">    currentListeners.push(listener);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">unsubScribe</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> index = currentListeners.indexOf(listener);</span><br><span class=\"line\">      currentListeners.splice(index, <span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    getState,</span><br><span class=\"line\">    subScribe,</span><br><span class=\"line\">    dispatch,</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"bindActionCreator\"><a href=\"#bindActionCreator\" class=\"headerlink\" title=\"bindActionCreator\"></a>bindActionCreator</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bindActionCreator</span>(<span class=\"params\">actionCreator, dispatch</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> dispatch(actionCreator.apply(<span class=\"built_in\">this</span>, <span class=\"built_in\">arguments</span>));</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bindActionCreators</span>(<span class=\"params\">actionCreators, dispatch</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> actionCreators === <span class=\"string\">&#x27;function&#x27;</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> bindActionCreator(actionCreators, dispatch);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> boundActionCreators = &#123;&#125;;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> key <span class=\"keyword\">in</span> actionCreators) &#123;</span><br><span class=\"line\">    boundActionCreators[key] = bindActionCreator(actionCreators[key], dispatch);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> boundActionCreators;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> bindActionCreators;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"combineReducer\"><a href=\"#combineReducer\" class=\"headerlink\" title=\"combineReducer\"></a>combineReducer</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">combineReducer</span>(<span class=\"params\">reducers</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> reducerkeys = <span class=\"built_in\">Object</span>.keys(reducers);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">state = &#123;&#125;, action</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> nextState = &#123;&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; reducerkeys.length; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> key = reducerkeys[i];</span><br><span class=\"line\">      <span class=\"keyword\">const</span> reducer = reducers[key];</span><br><span class=\"line\">      <span class=\"keyword\">const</span> previousStateForKey = state[key];</span><br><span class=\"line\">      <span class=\"keyword\">const</span> nextStateForkey = reducer(previousStateForKey, action);</span><br><span class=\"line\">      nextState[key] = nextStateForkey;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> nextState;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"util\"><a href=\"#util\" class=\"headerlink\" title=\"util\"></a>util</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isPlainObject</span>(<span class=\"params\">obj</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> obj !== <span class=\"string\">&#x27;object&#x27;</span> || obj === <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">let</span> proto = obj;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (<span class=\"built_in\">Object</span>.getPrototypeOf(proto)) &#123;</span><br><span class=\"line\">    proto = <span class=\"built_in\">Object</span>.getPrototypeOf(proto);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">Object</span>.getPrototypeOf(obj) === proto;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"applyMiddleWare\"><a href=\"#applyMiddleWare\" class=\"headerlink\" title=\"applyMiddleWare\"></a>applyMiddleWare</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">function <span class=\"title\">applyMiddleWare</span><span class=\"params\">(...middlewares)</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> function (createStore) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> function (reducer) &#123;</span><br><span class=\"line\">      let store = createStore();</span><br><span class=\"line\">      let dispath = () =&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Error();</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">      let middlewareAPI = &#123;</span><br><span class=\"line\">        getStore: store.getState,</span><br><span class=\"line\">        dispatch: (...args) =&gt; dispath(...args),</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">      <span class=\"comment\">// middleware = middleware(store);</span></span><br><span class=\"line\">      <span class=\"comment\">// dispath = middleware(store.dispatch);</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">const</span> chain = middlewares.map((middleware) =&gt; middleware(middlewareAPI));</span><br><span class=\"line\">      dispath = componse(...chain)(store.dispatch)</span><br><span class=\"line\">      <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        ...store,</span><br><span class=\"line\">        dispath,</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"compose\"><a href=\"#compose\" class=\"headerlink\" title=\"compose\"></a>compose</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">compose</span>(<span class=\"params\">...funcs</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (funcs.length === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"function\">(<span class=\"params\">args</span>) =&gt;</span> args;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (funcs.length === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> funcs[<span class=\"number\">0</span>];</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> funcs.reduce(<span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> <span class=\"function\">(<span class=\"params\">...args</span>) =&gt;</span> a(b(...args)));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> compose;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"react-reudx\"><a href=\"#react-reudx\" class=\"headerlink\" title=\"react-reudx\"></a>react-reudx</h2><h3 id=\"index-js\"><a href=\"#index-js\" class=\"headerlink\" title=\"index.js\"></a>index.js</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Provider <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./Provider&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> connect <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./connect&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> &#123; Provider, connect &#125;;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Provider-js\"><a href=\"#Provider-js\" class=\"headerlink\" title=\"Provider.js\"></a>Provider.js</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React, &#123; Component &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> ReduxContext <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./context&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Provider</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">render</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;ReduxContext.Provider value=&#123;<span class=\"built_in\">this</span>.props.store&#125;&gt;</span><br><span class=\"line\">        &#123;<span class=\"built_in\">this</span>.props.children&#125;</span><br><span class=\"line\">      &lt;/ReduxContext.Provider&gt;</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> Provider;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"connect-js\"><a href=\"#connect-js\" class=\"headerlink\" title=\"connect.js\"></a>connect.js</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> ReduxContext <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./context&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> bindActionCreator <span class=\"keyword\">from</span> <span class=\"string\">&#x27;../redux/bindActionCreator&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">connect</span>(<span class=\"params\">mapStateToProps, mapDispatchToProps</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">WrappedComponent</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"keyword\">extends</span> <span class=\"title\">React</span>.<span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">static</span> contextType = ReduxContext;</span><br><span class=\"line\">      <span class=\"function\"><span class=\"title\">constructor</span>(<span class=\"params\">props, context</span>)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">super</span>(props);</span><br><span class=\"line\">        <span class=\"comment\">/** context = &#123;store: this.props.store&#125; */</span></span><br><span class=\"line\">        <span class=\"built_in\">this</span>.state = mapDispatchToProps(context.store.getState());</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"function\"><span class=\"title\">componentDidCatch</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.unsubscribe = <span class=\"built_in\">this</span>.context.store.subscribe(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"built_in\">this</span>.setState(mapStateToProps(<span class=\"built_in\">this</span>.context.store.getState()));</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"function\"><span class=\"title\">componentWillUnmount</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.unsubscribe();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"function\"><span class=\"title\">render</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> action = bindActionCreator(</span><br><span class=\"line\">          mapDispatchToProps,</span><br><span class=\"line\">          <span class=\"built_in\">this</span>.context.store.dispatch</span><br><span class=\"line\">        );</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">WrappedComponent</span> &#123;<span class=\"attr\">...this.state</span>&#125; &#123;<span class=\"attr\">...action</span>&#125; /&gt;</span></span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"context-js\"><a href=\"#context-js\" class=\"headerlink\" title=\"context.js\"></a>context.js</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> ReduxContext = React.createContext(<span class=\"literal\">null</span>);</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> ReduxContext;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"redux-promise\"><a href=\"#redux-promise\" class=\"headerlink\" title=\"redux-promise\"></a>redux-promise</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isPromise</span>(<span class=\"params\">obj</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    !!obj &amp;&amp;</span><br><span class=\"line\">    (<span class=\"keyword\">typeof</span> obj === <span class=\"string\">&#x27;object&#x27;</span> || <span class=\"keyword\">typeof</span> obj === <span class=\"string\">&#x27;function&#x27;</span>) &amp;&amp;</span><br><span class=\"line\">    <span class=\"keyword\">typeof</span> obj.then === <span class=\"string\">&#x27;function&#x27;</span></span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">&#123; dispatch, getState &#125;</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"function\">(<span class=\"params\">next</span>) =&gt;</span> <span class=\"function\">(<span class=\"params\">action</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> isPromise(action.payload)</span><br><span class=\"line\">      ? action.payload.then(<span class=\"function\">(<span class=\"params\">result</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          dispatch(&#123; ...action, <span class=\"attr\">payload</span>: result &#125;);</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">      : next(action);</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"reudx-thunk\"><a href=\"#reudx-thunk\" class=\"headerlink\" title=\"reudx-thunk\"></a>reudx-thunk</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">function <span class=\"title\">createThunkMiddleware</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (&#123; dispatch, getState &#125; <span class=\"comment\">/** middlewareAPI */</span>) =&gt; (next) =&gt; (</span><br><span class=\"line\">    action</span><br><span class=\"line\">  ) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (typeof action === <span class=\"string\">&#x27;function&#x27;</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> action(dispatch, getState);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> next(action);</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n","feature":null,"text":"redux 1234567891011121314151617181920212223242526272829303132333435363738394041import &#123; createStore &#125; from &#x27;redux&#x27;;let I...","link":"","photos":[],"count_time":{"symbolsCount":"7.8k","symbolsTime":"7 mins."},"categories":[{"name":"React","slug":"React","count":7,"path":"api/categories/React.json"}],"tags":[{"name":"React","slug":"React","count":7,"path":"api/tags/React.json"},{"name":"redux","slug":"redux","count":1,"path":"api/tags/redux.json"},{"name":"redux-middleware","slug":"redux-middleware","count":1,"path":"api/tags/redux-middleware.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#redux\"><span class=\"toc-text\">redux</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#create-store-js-%E7%89%88%E6%9C%AC%E4%B8%80\"><span class=\"toc-text\">create-store.js(版本一)</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#bindActionCreator\"><span class=\"toc-text\">bindActionCreator</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#combineReducer\"><span class=\"toc-text\">combineReducer</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#util\"><span class=\"toc-text\">util</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#applyMiddleWare\"><span class=\"toc-text\">applyMiddleWare</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#compose\"><span class=\"toc-text\">compose</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#react-reudx\"><span class=\"toc-text\">react-reudx</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#index-js\"><span class=\"toc-text\">index.js</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Provider-js\"><span class=\"toc-text\">Provider.js</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#connect-js\"><span class=\"toc-text\">connect.js</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#context-js\"><span class=\"toc-text\">context.js</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#redux-promise\"><span class=\"toc-text\">redux-promise</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#reudx-thunk\"><span class=\"toc-text\">reudx-thunk</span></a></li></ol>","author":{"name":"麦当","avatar":"http://image.vulpix.top/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20210326214030.jpg","link":""},"mapped":true,"prev_post":{"title":"Symbol 基础学习","uid":"ba2efac7316616866db1719079267951","slug":"symbol","date":"2021-04-06T14:27:28.412Z","updated":"2021-04-06T14:53:18.661Z","comments":true,"path":"api/articles/symbol.json","keywords":null,"cover":"http://img-blog.csdnimg.cn/20200716163610402.jpg","text":"Symbol 内置符号 ECMAScript 6 也引入了一批常用内置符号（well-known symbol），用于暴露语言内部行为，开发者可以直接访问、重写或模拟这些行为。这些内置符号都以 Symbol 工厂函数字符串属性的形式存在。这些内置符号最重要的用途之一是重新定义它们...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"JavaScript","slug":"JavaScript","count":2,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":2,"path":"api/tags/JavaScript.json"}],"author":{"name":"麦当","avatar":"http://image.vulpix.top/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20210326214030.jpg","link":""}},"next_post":{"title":"react-setState","uid":"89dff2a6379feafc73b36875ccf71035","slug":"react-setState","date":"2021-04-06T14:27:28.394Z","updated":"2021-04-06T14:53:18.661Z","comments":true,"path":"api/articles/react-setState.json","keywords":null,"cover":"http://img-blog.csdnimg.cn/20200716163610402.jpg","text":"react-state 流程 index.js123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263...","link":"","photos":[],"count_time":{"symbolsCount":"3.9k","symbolsTime":"4 mins."},"categories":[{"name":"React","slug":"React","count":7,"path":"api/categories/React.json"}],"tags":[{"name":"React","slug":"React","count":7,"path":"api/tags/React.json"}],"author":{"name":"麦当","avatar":"http://image.vulpix.top/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20210326214030.jpg","link":""}}}