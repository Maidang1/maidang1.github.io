{"title":"svelte","uid":"159e1d8888631750dd50b9032a4b1226","slug":"svelte","date":"2021-04-07T12:07:51.000Z","updated":"2021-04-07T12:59:01.271Z","comments":true,"path":"api/articles/svelte.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/Maidang1/image//image/114936-15934889760420.jpg","content":"<h2 id=\"Svelte\"><a href=\"#Svelte\" class=\"headerlink\" title=\"Svelte\"></a>Svelte</h2><pre class=\"line-numbers language-txt\" data-language=\"txt\"><code class=\"language-txt\">Vue.min.js\nVue.runtime.js (dom diff 虚拟 dom) 运行时\nReact Vue\n虚拟 dom ---&gt; dom diff\n\n提升性能?\nhtml 输出 domReady 提前\n\n重绘 重排(重新布局)\nFID FP FCP LCP\n\nJQuery 没有响应式\n\nSvelte 相当于 store + 响应式 + JQuery</code></pre>\n\n<h2 id=\"自己对于-Vue-React-Svelte-的理解\"><a href=\"#自己对于-Vue-React-Svelte-的理解\" class=\"headerlink\" title=\"自己对于 Vue, React, Svelte 的理解\"></a>自己对于 Vue, React, Svelte 的理解</h2><pre class=\"line-numbers language-txt\" data-language=\"txt\"><code class=\"language-txt\">现在的框架都是基于响应式的，这样的好处就是我们不要关心对于DOM的操作\n我们只需要注重于数据驱动视图即可。所以Vue, React就是专注于于数据和\n视图。追求的极致就是追求最小的DOM操作，为此诞生出了大名鼎鼎的DOM DIFF\n算法。 通过虚拟DOM 来寻找最小的元素更新。为此出现了一大推的编译，调度\n更新。Svelte并没有虚拟DOM 去直接跟踪最小的元素节点。避免了虚拟DOM的\n大量比对 相当于一个编译器</code></pre>\n\n<h2 id=\"优点\"><a href=\"#优点\" class=\"headerlink\" title=\"优点\"></a>优点</h2><ul>\n<li>编译出来的代码小 状态管理 响应式</li>\n<li>Ts Scoped Style</li>\n<li>没有虚拟 dom dom diff</li>\n</ul>\n<h2 id=\"缺点\"><a href=\"#缺点\" class=\"headerlink\" title=\"缺点\"></a>缺点</h2><ul>\n<li>组件库 路由 少</li>\n</ul>\n","feature":null,"text":"SvelteVue.min.js Vue.runtime.js (dom diff 虚拟 dom) 运行时 React Vue 虚拟 dom ---&gt; dom diff 提升性能? html 输出 domReady 提前 重绘 重排(重新布局) FID FP FCP LCP...","link":"","photos":[],"count_time":{"symbolsCount":497,"symbolsTime":"1 mins."},"categories":[{"name":"JavaScript","slug":"JavaScript","count":4,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"svelte","slug":"svelte","count":1,"path":"api/tags/svelte.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Svelte\"><span class=\"toc-text\">Svelte</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%87%AA%E5%B7%B1%E5%AF%B9%E4%BA%8E-Vue-React-Svelte-%E7%9A%84%E7%90%86%E8%A7%A3\"><span class=\"toc-text\">自己对于 Vue, React, Svelte 的理解</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BC%98%E7%82%B9\"><span class=\"toc-text\">优点</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BC%BA%E7%82%B9\"><span class=\"toc-text\">缺点</span></a></li></ol>","author":{"name":"麦当","avatar":"https://cdn.jsdelivr.net/gh/Maidang1/image//image/avatar.jpg","link":""},"mapped":true,"prev_post":{"title":"React哲学","uid":"0d342afe6af4aff548d2b83f7ab3c19b","slug":"react哲学","date":"2021-04-07T14:08:51.000Z","updated":"2021-04-11T12:33:55.315Z","comments":true,"path":"api/articles/react哲学.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/Maidang1/image//image/123945-1496983185ad61.jpg","text":"浏览器运行环境js 运行 ---&gt; v8&#x2F;quickJs 浏览器 js&#x2F;html&#x2F;css &#x3D;&#x3D;&#x3D;&#x3D; 框架 React UI框架 ----&gt; 快速响应 配合浏览器的特性开发 不是压榨浏览器性能 环境特...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"React","slug":"React","count":8,"path":"api/categories/React.json"}],"tags":[{"name":"React","slug":"React","count":8,"path":"api/tags/React.json"}],"author":{"name":"麦当","avatar":"https://cdn.jsdelivr.net/gh/Maidang1/image//image/avatar.jpg","link":""}},"next_post":{"title":"JavaScript基础知识","uid":"e292dba6baac8421f1f811c59a127952","slug":"JavaScript","date":"2021-04-07T08:34:27.488Z","updated":"2021-04-08T08:44:17.126Z","comments":true,"path":"api/articles/JavaScript.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/Maidang1/image//image/231750-16152166709491.jpg","text":"ArrayBuffer 特殊的构造函数，可以分配指定大小的字节空间，空间分配之后不在变化 可以用 slice()方法截取部分 const buf &#x3D; new ArrayBuffer(16); &#x2F;&#x2F; 16字节 const buf1 &#x3D; new...","link":"","photos":[],"count_time":{"symbolsCount":"5k","symbolsTime":"5 mins."},"categories":[{"name":"JavaScript","slug":"JavaScript","count":4,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":3,"path":"api/tags/JavaScript.json"}],"author":{"name":"麦当","avatar":"https://cdn.jsdelivr.net/gh/Maidang1/image//image/avatar.jpg","link":""}}}