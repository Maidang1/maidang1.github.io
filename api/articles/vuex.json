{"title":"Vuex 源码分析","uid":"d99453202fb96ed4663408801fbf0008","slug":"vuex","date":"2021-04-06T14:27:28.497Z","updated":"2021-04-06T14:53:15.200Z","comments":true,"path":"api/articles/vuex.json","keywords":null,"cover":"http://img-blog.csdnimg.cn/20200716163610402.jpg","content":"<h2 id=\"vuex-简易实现\"><a href=\"#vuex-简易实现\" class=\"headerlink\" title=\"vuex 简易实现\"></a>vuex 简易实现</h2><span id=\"more\"></span>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">let Vue;\n\nclass ModuleCollection &#123;\n  constructor(options) &#123;\n    this.register([], options);\n  &#125;\n\n  register(path, rootModule) &#123;\n    let module &#x3D; &#123;\n      _rawModule: rootModule,\n      _children: &#123;&#125;,\n      state: rootModule.state,\n    &#125;;\n\n    if (path.length &#x3D;&#x3D; 0) &#123;\n      this.root &#x3D; module;\n    &#125;\n\n    if(rootModule.modules) &#123;\n      for\n    &#125;\n  &#125;\n&#125;\n\nclass Store &#123;\n  constructor(options &#x3D; &#123;&#125;) &#123;\n    &#x2F;&#x2F; 状态赋值\n    this.s &#x3D; new Vue(&#123;\n      data() &#123;\n        return &#123; state: options.state &#125;;\n      &#125;,\n    &#125;);\n    let getters &#x3D; options.getters;\n\n    this.getters &#x3D; &#123;&#125;;\n\n    Object.keys(getters).forEach((getterName) &#x3D;&gt; &#123;\n      Object.defineProperty(this.getters, getterName, &#123;\n        get: () &#x3D;&gt; &#123;\n          return getters[getterName](this.state);\n        &#125;,\n      &#125;);\n    &#125;);\n\n    let mutations &#x3D; options.mutations;\n    this.mutations &#x3D; &#123;&#125;;\n    &#x2F;&#x2F; 发布订阅模式\n    Object.keys(mutations).forEach((mutation) &#x3D;&gt; &#123;\n      this.mutations[mutation] &#x3D; (payload) &#x3D;&gt; &#123;\n        mutations[mutation](this.state, payload);\n      &#125;;\n    &#125;);\n\n    &#x2F;&#x2F; action\n\n    let actions &#x3D; options.actions;\n    this.action &#x3D; &#123;&#125;;\n    Object.keys(actions).forEach((action) &#x3D;&gt; &#123;\n      this.actions[action] &#x3D; (payload, fn) &#x3D;&gt; &#123;\n        fn(this, payload);\n      &#125;;\n    &#125;);\n\n    this._modules &#x3D; new ModuleCollection(); &#x2F;&#x2F; 数据格式化\n  &#125;\n\n  dispatch &#x3D; (actionName, payload) &#x3D;&gt; &#123;\n    this.action[actionName](payload);\n  &#125;;\n  &#x2F;&#x2F;提交更改\n  commit &#x3D; (mutationName, payload) &#x3D;&gt; &#123;\n    this.mutations[mutationName](payload);\n  &#125;;\n\n  get state() &#123;\n    return this.s.state;\n  &#125;\n&#125;\n\nconst install &#x3D; (_Vue) &#x3D;&gt; &#123;\n  Vue &#x3D; _Vue; &#x2F;&#x2F; vue构造函数\n\n  Vue.mixin(&#123;\n    beforeCreate() &#123;\n      &#x2F;&#x2F; 需要拿到store 给每个组件增加了$store属性\n      &#x2F;&#x2F; 可能有很多Vue实例 有的不需要store 没有放在Vue原型上面\n      if (this.$options &amp;&amp; this.$options.store) &#123;\n        &#x2F;&#x2F; 给根实例增加$store属性\n        this.$store &#x3D; this.$options.store;\n      &#125; else &#123;\n        &#x2F;&#x2F; 单独创建的实例\n        this.store &#x3D; this.$parent &amp;&amp; this.$parent.store;\n      &#125;\n    &#125;,\n  &#125;);\n&#125;;\n\nexport default &#123;\n  &#x2F;&#x2F; 默认执行 vue方法\n  install,\n&#125;;\n</code></pre>\n","feature":null,"text":"vuex 简易实现 let Vue; class ModuleCollection &#123; constructor(options) &#123; this.register([], options); &#125; register(path, rootModule) &...","link":"","photos":[],"count_time":{"symbolsCount":"2.6k","symbolsTime":"2 mins."},"categories":[{"name":"vue","slug":"vue","count":3,"path":"api/categories/vue.json"}],"tags":[{"name":"vuex","slug":"vuex","count":2,"path":"api/tags/vuex.json"},{"name":"vue","slug":"vue","count":1,"path":"api/tags/vue.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#vuex-%E7%AE%80%E6%98%93%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">vuex 简易实现</span></a></li></ol>","author":{"name":"麦当","avatar":"https://cdn.jsdelivr.net/gh/Maidang1/image//image/avatar.jpg","link":""},"mapped":true,"prev_post":{"title":"JavaScript基础知识","uid":"e292dba6baac8421f1f811c59a127952","slug":"JavaScript","date":"2021-04-07T08:34:27.488Z","updated":"2021-04-08T08:44:17.126Z","comments":true,"path":"api/articles/JavaScript.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/Maidang1/image//image/231750-16152166709491.jpg","text":"ArrayBuffer 特殊的构造函数，可以分配指定大小的字节空间，空间分配之后不在变化 可以用 slice()方法截取部分 const buf &#x3D; new ArrayBuffer(16); &#x2F;&#x2F; 16字节 const buf1 &#x3D; new...","link":"","photos":[],"count_time":{"symbolsCount":"5k","symbolsTime":"5 mins."},"categories":[{"name":"JavaScript","slug":"JavaScript","count":5,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":4,"path":"api/tags/JavaScript.json"}],"author":{"name":"麦当","avatar":"https://cdn.jsdelivr.net/gh/Maidang1/image//image/avatar.jpg","link":""}},"next_post":{"title":"Vue3 响应式原理","uid":"b491bd34f265533799a79211838a0e41","slug":"vue3-reactive","date":"2021-04-06T14:27:28.471Z","updated":"2021-04-06T14:53:18.660Z","comments":true,"path":"api/articles/vue3-reactive.json","keywords":null,"cover":"http://img-blog.csdnimg.cn/20200716163610402.jpg","text":"简单的实现 Vue3 响应式原理 let toProxy &#x3D; new WeakMap(); &#x2F;&#x2F; 原对象：代理过得对象 let toRaw &#x3D; new WeakMap(); &#x2F;&#x2F; 被代理过得对象: 原对象 functio...","link":"","photos":[],"count_time":{"symbolsCount":"3k","symbolsTime":"3 mins."},"categories":[{"name":"vue","slug":"vue","count":3,"path":"api/categories/vue.json"}],"tags":[{"name":"vue3","slug":"vue3","count":1,"path":"api/tags/vue3.json"}],"author":{"name":"麦当","avatar":"https://cdn.jsdelivr.net/gh/Maidang1/image//image/avatar.jpg","link":""}}}